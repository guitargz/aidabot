name: cicd-oracle
on:
  push:
    branches:
      - main
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Write Config & Key Files'
      run: |
        mkdir ~/.oci
        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
        echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
        echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
        echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
        echo "key_file=~/.oci/key.pem" >> ~/.oci/config
        echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
    
    - name: 'Install OCI CLI'
      run: |
        curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults
        echo "/home/runner/bin" >> $GITHUB_PATH
        exec -l $SHELL

    - name: 'Fix Config File Permissions'
      run: |
        oci setup repair-file-permissions --file /home/runner/.oci/config
        oci setup repair-file-permissions --file /home/runner/.oci/key.pem
        echo "${{secrets.VM_SSH_PUB_KEY}}" >> /home/runner/.oci/id_vm.pub

    - name: 'Check Existing Instance'
      run: |
        echo "INSTANCE_OCID=$( \
          oci compute instance list \
          --lifecycle-state RUNNING \
          --compartment-id ${{secrets.VM_COMPARTMENT_OCID}} \
          --display-name free-docker-runner \
          --query "data [0].id" \
          --raw-output \
        )" >> $GITHUB_ENV

    - name: 'Create Instance'
      if: ${{!env.INSTANCE_OCID}}
      run: |
        echo "instance_ocid=$( \
          oci compute instance launch \
            --compartment-id ${{secrets.VM_COMPARTMENT_OCID}} \
            --availability-domain ${{secrets.VM_AVAILABILITY_DOMAIN}} \
            --shape ${{secrets.VM_SHAPE}} \
            --assign-public-ip true \
            --display-name free-docker-vm \
            --image-id ${{secrets.VM_CUSTOM_IMAGE_OCID}} \
            --ssh-authorized-keys-file /home/runner/.oci/id_vm.pub \
            --subnet-id ${{secrets.VM_SUBNET_OCID}} \
            --wait-for-state RUNNING \
            --query "data.id" \
            --raw-output \
        )" >> $GITHUB_ENV
      
    - name: 'Get Instance IP'
      run: |
        echo "instance_ip=$( \
          oci compute instance list-vnics \
          --instance-id ${{env.INSTANCE_OCID}} \
          --query 'data [0]."public-ip"' \
          --raw-output \
        )" >> $GITHUB_ENV

    - name: 'Wait for SSH'
      run: |
        while ! nc -w5 -z ${{ env.instance_ip }} 22; do
                sleep 5
                echo "SSH not available..."
        done; echo "SSH ready!"

    - name: 'Stop containers - was Stop App'
      run: |
        echo "Stopping the running containers."

    - name: 'Push containers - was Push Jar'
      run: |
        echo "Pushing new containers."

    - name: 'Start new containers - was Start app'
      run: |
        echo "Starting the new containers."